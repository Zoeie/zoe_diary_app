apply plugin: 'com.android.application'
apply plugin: 'com.mob.sdk'

/**
 * 读取版本配置
 */
Properties mVersionProps = getProperty()
/**
 * 读取版本名
 */
String mVersionCode = mVersionProps['VERSION_CODE']
/**
 * 读取版本名
 */
String mVersionName = mVersionProps['VERSION_NAME']
/**
 * 构建编号
 */
String mBuildCode = String.valueOf(mVersionProps['BUILD_CODE'])
/**
 * 编译apk文件名称
 */
String mBuildName = String.valueOf(mVersionProps['BUILD_NAME'])

android {
    compileSdkVersion 28
    buildToolsVersion "29.0.2"

    signingConfigs {
        release {
            storeFile file('docs/diary.jks')
            storePassword "android"
            keyAlias "zoe_diary"
            keyPassword "android"
        }
    }

    defaultConfig {
        applicationId "com.zoe.diary"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath true
                //room的数据库概要、记录
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            signingConfig signingConfigs.release
        }
    }

    //移除lint检测的error
    lintOptions {
        abortOnError false
    }
    flavorDimensions 'main'
    productFlavors {
        zoe_diary {
            dimension 'main'
            // 每个环境包名不同
            applicationId "com.zoe.diary"
        }
    }

    // 自定义输出配置，这里我们加上APK版本号1.0
    android.applicationVariants.all { variant ->
        variant.outputs.all { output ->
            outputFileName = "${mBuildName}_v${defaultConfig.versionName}_${mBuildCode}_${variant.productFlavors[0].name}.apk"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

/**
 * 获取构建版本
 * @return
 */
def getProperty() {
    Properties buildProps = new Properties()
    buildProps.load(new FileInputStream(file('docs/build.properties')))
    return buildProps
}

MobSDK {
    appKey "2d71b95f55386"
    appSecret "24a99e3a52c25e87e89bb48fd4d33160"
    ShareSDK {
        //平台配置信息
        devInfo {
            Wechat {
                appId "wxd4596a91d58d3d59"
                appSecret "dc6f46e8998fa3162444ba533ea8a6c2"
            }
            QQ {
                appId "1110123864"
                appKey "kYfAClzc8ikQgSbM"
                shareByAppClient true
            }
        }
       gui false //Onekeyshare是ShareSDK的GUI界面，如果不需要，则需要添加"gui false"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    //design
    implementation 'com.android.support:design:28.1.0'
    //添加依赖
    //okhttp
    implementation 'com.squareup.okhttp3:logging-interceptor:3.11.0'
    //retrofit
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofit2Version"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofit2Version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rootProject.retrofit2Version"
    //rxjava
    implementation 'io.reactivex.rxjava2:rxjava:2.2.7'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    //注解库
    implementation 'com.jakewharton:butterknife:10.2.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.0'
    //列表
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.47'
    implementation 'com.github.LuckSiege.PictureSelector:picture_library:v2.3.8'
    //Glide
    implementation 'com.github.bumptech.glide:glide:4.10.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.10.0'
    // Room components
    implementation "androidx.room:room-runtime:$rootProject.roomVersion"
    annotationProcessor "androidx.room:room-compiler:$rootProject.roomVersion"
    androidTestImplementation "androidx.room:room-testing:$rootProject.roomVersion"
    //调试数据库(用于查看数据库)
    debugImplementation 'com.amitshekhar.android:debug-db:1.0.6'
    //skin
    implementation 'skin.support:skin-support:4.0.4'                   // skin-support
    implementation 'skin.support:skin-support-appcompat:4.0.4'         // skin-support 基础控件支持
    implementation 'skin.support:skin-support-design:4.0.4'            // skin-support-design material design 控件支持[可选]
    implementation 'skin.support:skin-support-cardview:4.0.4'          // skin-support-cardview CardView 控件支持[可选]
    implementation 'skin.support:skin-support-constraint-layout:4.0.4' // skin-support-constraint-layout ConstraintLayout 控件支持[可选]
}
